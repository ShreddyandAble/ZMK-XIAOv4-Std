/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
//#include <behaviors/mouse_keys.dtsi>

#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E       &kp R        &kp T                   &kp Y                      &kp U        &kp I       &kp O    &kp P
&kp A  &kp S  &kp D       &kp F        &kp G                   &kp H                      &kp J        &kp K       &kp L    &kp APOS
&kp Z  &kp X  &kp C       &kp V        &kp B                   &kp N                      &kp M        &kp COMMA   &kp DOT  &kp FSLH
              &kp K_BACK  &lt 2 ENTER  &mt LEFT_CONTROL TAB    &mt RIGHT_SHIFT BACKSPACE  &lt 1 SPACE  &kp ESCAPE
            >;
        };

        Arrows {
            bindings = <
&trans             &trans            &trans        &trans             &trans           &trans  &kp HOME         &kp UP_ARROW  &kp END    &trans
&trans             &kp LC(LG(LEFT))  &kp RG(D)     &kp RG(LC(RIGHT))  &trans           &trans  &kp LEFT         &kp DOWN      &kp RIGHT  &trans
&kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp K_MUTE    &kp LG(PERIOD)     &trans           &trans  &kp LC(LS(TAB))  &kp LC(TAB)   &trans     &trans
                                     &kp CAPSLOCK  &kp PAGE_UP        &kp PAGE_DOWN    &trans  &trans           &kp DEL
            >;
        };

        Numbers {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp NUMBER_7  &kp N8      &kp N9    &kp N0
&kp EQUAL     &kp PLUS      &kp TILDE     &kp HASH      &trans    &trans        &kp UNDER     &kp COLON   &kp SEMI  &kp MINUS
&trans        &trans        &trans        &trans        &trans    &trans        &trans        &trans      &trans    &trans
                            &kp CAPSLOCK  &trans        &trans    &trans        &trans        &kp DELETE
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans  &trans  &trans
                &trans  &trans  &trans    &mkp MB1  &mkp MB2  &trans
            >;
        };

        Tabs {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

// //right hand trackball overrides
// &trackball_peripheral_listener {
//     input-processors =
//         <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,//this gets it to the default installation orientation
//         <&zip_temp_layer 3 500>;//activate layer 3 within 500ms of the trackball moving
// };
// //left hand trackball overrides
// &trackball_central_listener {
//     input-processors = 
//         <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,//this gets it to the default installation orientation
//         <&zip_xy_scaler 1 3>,//multiply sensitivity by 1, divide by 3 (make it slower for scrolling)
//         <&zip_xy_to_scroll_mapper>,//make this trackball output scrolling events by default instead of cursor movement
//         <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;//invert vertical scrolling so that the view moves in the same direction as the top of the trackball.
// };
